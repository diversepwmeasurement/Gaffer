env:
  MAVEN_OPTS: -Dmaven.wagon.http.retryHandler.count=3 -Dmaven.wagon.httpconnectionManager.ttlSeconds=25
  artifactId: gaffer2
jobs:
  create-release-tag:
    outputs:
      branch_name: ${{ steps.branch.outputs.branch_name }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Checkout master
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: master
        token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
    - continue-on-error: true
      name: Set up Github credentials
      run: 'git config user.name github-actions[bot]

        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

        '
    - continue-on-error: true
      name: Set release version
      run: echo "RELEASE_VERSION=$(echo ${{ github.event.milestone.title }} | cut
        -c 2-)" >> $GITHUB_ENV
    - continue-on-error: true
      name: Set branch name
      run: echo "BRANCH_NAME=$(git branch -a | grep $RELEASE_VERSION | tail -n 1 |
        cut -c 18-)" >> $GITHUB_ENV
    - continue-on-error: true
      id: branch
      name: Output branch name
      run: echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
    - continue-on-error: true
      if: ${{ !steps.branch.outputs.branch_name }}
      name: Fail if branch output missing (no branch found)
      run: exit 1
    - continue-on-error: true
      name: Merge release into master
      run: 'git checkout ${{ env.BRANCH_NAME }}

        git checkout master

        git merge ${{ env.BRANCH_NAME }}

        '
    - continue-on-error: true
      name: Push changes
      run: 'git tag $artifactId-$RELEASE_VERSION

        git push origin $artifactId-$RELEASE_VERSION

        git push

        '
  generate-javadoc:
    needs:
    - create-release-tag
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Master
      uses: actions/checkout@v4
      with:
        ref: master
        token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
    - continue-on-error: true
      name: Set up Github credentials
      run: 'git config user.name github-actions[bot]

        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

        '
    - continue-on-error: true
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '11'
    - continue-on-error: true
      name: Set version
      run: echo "RELEASE_VERSION=$(echo ${{ github.event.milestone.title }} | cut
        -c 2-)" >> $GITHUB_ENV
    - continue-on-error: true
      name: Upload Javadoc
      run: 'git remote set-branches --add origin gh-pages

        git pull

        mvn -q clean install -Pquick -Dskip.jar-with-dependencies=true -Dshaded.jar.phase=true

        mvn -q javadoc:aggregate

        git checkout gh-pages

        rm -rf uk

        rm -rf jquery

        rm -rf resources

        cp -rlf target/site/apidocs/* .

        git add .

        git commit -a -m "Updated javadoc - $RELEASE_VERSION"

        git push

        '
  release-to-nexus:
    needs:
    - create-release-tag
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Checkout release
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.create-release-tag.outputs.branch_name }}
    - continue-on-error: true
      env:
        CODE_SIGNING_IV: ${{ secrets.CODE_SIGNING_IV }}
        CODE_SIGNING_KEY: ${{ secrets.CODE_SIGNING_KEY }}
      name: Decode CodeSigning key
      run: openssl aes-256-cbc -K "$CODE_SIGNING_KEY" -iv "$CODE_SIGNING_IV" -in cd/codesigning.asc.enc
        -out cd/codesigning.asc -d
    - continue-on-error: true
      name: Import CodeSigning key
      run: gpg --batch --fast-import cd/codesigning.asc
    - continue-on-error: true
      env:
        GPG_KEY_NAME: ${{ secrets.GPG_KEY_NAME }}
        GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        OSS_NEXUS_PASSWORD: ${{ secrets.OSS_NEXUS_PASSWORD }}
        OSS_NEXUS_USERNAME: ${{ secrets.OSS_NEXUS_USERNAME }}
      name: Release to Nexus
      run: mvn deploy -P quick,ossrh-release --settings cd/mvnsettings.xml -B
  update-develop:
    needs:
    - create-release-tag
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout develop
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: develop
        token: ${{ secrets.ADMIN_GITHUB_TOKEN }}
    - continue-on-error: true
      name: Set up Github credentials
      run: 'git config user.name github-actions[bot]

        git config user.email 41898282+github-actions[bot]@users.noreply.github.com

        '
    - continue-on-error: true
      name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: '8'
    - continue-on-error: true
      name: Merge release into develop
      run: 'git checkout ${{ needs.create-release-tag.outputs.branch_name }}

        git checkout develop

        git merge ${{ needs.create-release-tag.outputs.branch_name }} --strategy-option
        theirs

        '
    - continue-on-error: true
      name: Update develop branch
      run: 'git checkout develop

        mvn release:update-versions -B

        NEW_GAFFER_VERSION=$(mvn -q help:evaluate -DforceStdout -Dexpression=pom.version)

        sed -i'''' -e "s/^gaffer.version=.*/gaffer.version=$NEW_GAFFER_VERSION/" rest-api/common-rest/src/main/resources/version.properties

        git commit -a -m "prepare for next development iteration"

        git push

        '
  update-github-releases:
    needs:
    - create-release-tag
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout Master
      uses: actions/checkout@v4
      with:
        ref: master
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Create Release Notes
      uses: docker://decathlon/release-notes-generator-action:2.1.0
    - continue-on-error: true
      name: Set version
      run: echo "RELEASE_VERSION=$(echo ${{ github.event.milestone.title }} | cut
        -c 2-)" >> $GITHUB_ENV
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Upload notes
      uses: softprops/action-gh-release@v1
      with:
        body_path: release_file.md
        name: Gaffer ${{ env.RELEASE_VERSION }}
        tag_name: ${{ env.artifactId }}-${{ env.RELEASE_VERSION }}
name: Full Release
on:
  repository_dispatch:
    types: trigger-ga___release.yaml
